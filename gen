#!/usr/bin/env bash

# Generate: A command-line script file generation tool written in bash 5.2+.
# https://github.com/membersincewayback/gen
#
# Copyright (C) 2022 Zac Piatt
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

version="Generate (gen) version: 1.1 - November 26, 2022"

FILENAME="${@: -1}"
EXT="${FILENAME#*.}"
TEMPLATES=templates/template.${EXT}

template_check() {
    if [[ -f "${TEMPLATES}" ]]; then
    template=$(cat "$TEMPLATES")

touchpy() {
cat <<[-]EOF
${template}
[-]EOF
}

touchpl() {
cat <<[-]EOF
${template}
[-]EOF
}

touchc() {
cat <<[-]EOF
${template}
[-]EOF
}

touchsh() {
cat <<[-]EOF
${template}
[-]EOF
}

touchhtml() {
cat <<[-]EOF
${template}
[-]EOF
}

    else

touchpy() { [[ "${quiet}" ]] && return
cat << EOF
def main():

if __name__ == '__main__':
    main()
EOF
}

touchpl() { [[ "${quiet}" ]] && return
cat << EOF
#!/usr/bin/perl
use strict;
use warnings;

EOF
}

touchc() { [[ "${quiet}" ]] && return
cat << EOF
#include <stdio.h>

int main()
{
   return 0;
}
EOF
}

touchsh() { [[ "${quiet}" ]] && return
cat << EOF
#!/usr/bin/env ${EXT}

EOF
}

touchhtml() { [[ "${quiet}" ]] && return
cat << EOF
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>HTML 5 Boilerplate</title>
    <link rel="stylesheet" href="style.css">
  </head>
  <body>
        <script src="index.js"></script>
  </body>
</html>
EOF
}

    fi
}

usage() {
cat << EOF
Usage: gen [OPTION]... [FILE]...
Generate FILE, auto-input typical text, and auto-launch default editor.

  -e,   select editor ( gen -e nano test.txt )
  -s,   suppress auto-launch of editor
  -q,   quiet auto-input of script template
  -h,   display this help and exit
  -v,   display version number and exit

Full documentation <https://github.com/membersincewayback/gen>
${version}
EOF
exit
}

check_ext() {
    case "$1" in
        *py ) touchpy >> "$1" ;;
        *pl ) chmod u+x "$1"; line=4; touchpl >> "$1" ;;
        *c ) line=4; touchc >> "$1" ;;
        *sh|*.bash ) chmod u+x "$1"; EXT="bash"; touchsh >> "$1" ;;
        *ksh ) chmod u+x "$1"; touchsh >> "$1" ;;
        *csh ) chmod u+x "$1"; touchsh >> "$1" ;;
        *awk ) chmod u+x "$1"; touchsh >> "$1" ;;
        *js ) chmod u+x "$1"; EXT="node"; touchsh >> "$1" ;;
        *html|*htm ) touchhtml >> "$1" ;;
        * ) return ;;
    esac
}

get_args() {
    while getopts 'e:shvq' OPTION; do
        case $OPTION in
            e) EDITOR=$OPTARG ;;
            s) suppress="True" ;;
            q) quiet="True" ;;
            h) usage ;;
            v) printf "${version}\n"; exit ;;
            ?) usage ;;
        esac
    done
}

exists() {
    if [[ -e "$FILENAME" ]]; then
        printf "Filename already exists.\n"; exit
    else
        if ! touch "$FILENAME"; then
            usage
        fi
    fi
}

main() {
    FILENAME="${@: -1}"
    EXT="${FILENAME#*.}"
    TEMPLATES=templates/template.${EXT}
    get_args "$@"
    exists
    template_check
    check_ext "${FILENAME}"
    [[ ! "${suppress}" ]] && ${EDITOR:-vi} +"${line:-2}" "${@: -1}"
}

main "$@"
