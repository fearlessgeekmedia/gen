#!/usr/bin/env bash

# Generate: A command-line script file generation tool written in bash 3.2+.
# https://github.com/membersincewayback/gen
#
# Copyright (C) 2022 Zac Piatt
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

version="Generate (gen) version: 1.3.1 - November 29, 2022"

template_check() {
    if [[ -f "${TEMPLATE_FILE}" ]]; then
        template="$(< "${TEMPLATE_FILE}")"
        format="templates"

gen_templates() {
cat <<[-]EOF
${template}
[-]EOF
}

    else

gen_py() {
cat << EOF
def main():

if __name__ == '__main__':
    main()
EOF
}

gen_pl() {
cat << EOF
#!/usr/bin/perl
use strict;
use warnings;

EOF
}

gen_c() {
cat << EOF
#include <stdio.h>

int main()
{

   return 0;
}
EOF
}

gen_sh() {
cat << EOF
#!/usr/bin/env ${EXT}

EOF
}

gen_html() {
cat << EOF
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>HTML 5 Boilerplate</title>
    <link rel="stylesheet" href="style.css">
  </head>
  <body>
        <script src="index.js"></script>
  </body>
</html>
EOF
}

gen_jsx() {
    BASENAME="${FILENAME##*/}"
cat << EOF
import React from 'react';

function ${BASENAME%.*}() {
  return (
    <>
    </>
  );
}

export default ${BASENAME%.*};
EOF
}
    fi
}

usage() {
cat << EOF
Usage: gen [OPTION]... [FILE]...
Generate FILE, auto-input typical text, and auto-launch default editor.

  -q,   quiet auto-input of script template
  -s,   suppress auto-launch of editor
  -e,   select editor ( gen -e nano test.txt )
  -v,   display version number and exit
  -h,   display this help and exit

Full documentation <https://github.com/membersincewayback/gen>
${version}
EOF
exit 0
}

check_ext() {
    case "$EXT" in
        *awk) exe=true ;;
        *ksh) exe=true ;;
        *csh) exe=true ;;
        *c) format="c" ;;
        *py) format="py" ;;
        *jsx) format="jsx" ;;
        *html|*htm) format="html" ;;
        *sh) exe=true; EXT="bash"; ;;
        *pl) exe=true; format="pl" ;;
        *js) exe=true; EXT="node" ;;
        *) [[ ! -f "${TEMPLATE_FILE}" ]] && quiet=true ;;
    esac
}

create_file() {
    if [[ -e "$FILENAME" ]]; then
        printf "Filename already exists.\n"; exit 1
    else
        if ! touch "$FILENAME" 2> /dev/null; then
            printf "Failed to create %s.\n" "$FILENAME"; exit 1
        fi
    fi
}

get_args() {
    while getopts 'xqsed:vh' OPTION; do
        case "$OPTION" in
            x) exe=true ;;
            q) quiet=true ;;
            s) suppress=true ;;
            e) EDITOR="$OPTARG" ;;
            d) unset TEMPLATE_FILE ;;
            v) printf "%s\n" "$version"; exit 0 ;;
            h) usage ;;
            ?) printf "Try 'gen -h' for more information.\n"; exit 1 ;;
        esac
    done
}

main() {
    FILENAME="${!#}"
    EXT="${FILENAME#*.}"
    TEMPLATE_FILE="${HOME}/.gen/templates/template.${EXT}"
    get_args "$@"
    create_file
    check_ext
    [[ "${exe}" ]] && chmod u+x "${FILENAME}"
    [[ ! "${quiet}" ]] && \
        template_check && gen_"${format:-sh}" >> "${FILENAME}"
    [[ ! "${suppress}" ]] && \
        if ! "${EDITOR:-vi}" "${FILENAME}" 2> /dev/null; then
            printf "Failed to launch editor.\n"
            printf "Try 'gen -h' for more information.\n"; exit 1
        fi
}

main "$@"
