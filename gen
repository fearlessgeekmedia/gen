#!/bin/bash

# Generate: A command-line script file generation tool written in bash 5.2+.
# https://github.com/membersincewayback/gen
#
# The MIT License (MIT)
#
# Copyright (c) 2022 Zac Piatt
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

touchpy() {
    new=${1}.${2}
    if [[ -f "$new" ]]; then
        echo "Filename already exists."
    else
        touch "$new"
        printf "def main():\n\t\n\nif __name__ == '__main__':\n\tmain()" >> "$new"
        if [[ -n $EDITOR ]]; then
            $EDITOR +2 "$new"
        else
            /usr/bin/vi +2 "$new"
        fi
    fi
}

touchpl() {
    new=${1}.${2}
    if [[ -f "$new" ]]; then
        echo "Filename already exists."
    else
        touch "$new"
        chmod u+x "$new"
        printf "#!/usr/bin/perl\n\nuse strict;\nuse warnings;\n\n" >> "$new"
        if [[ -n $EDITOR ]]; then
            $EDITOR +5 "$new"
        else
            /usr/bin/vi +3 "$new"
        fi
    fi
}

touchc() {
    new=${1}.${2}
    if [[ -f "$new" ]]; then
        echo "Filename already exists."
    else
        touch "$new"
        printf "#include <stdio.h>\n\nint main()\n{\n\n\t\n\n}" >> "$new"
        if [[ -n $EDITOR ]]; then
            $EDITOR +6 "$new"
        else
            /usr/bin/vi +2 "$new"
        fi
    fi
}

generic() {
    new=${1}.${2}
    if [[ -f "$new" ]]; then
        echo "Filename already exists."
    else
        touch "$new"
        chmod u+x "$new"
        printf "#!/usr/bin/%s\n\n" "$script" >> "$new"
        if [[ -n $EDITOR ]]; then
            $EDITOR +2 "$new"
        else
            /usr/bin/vi +2 "$new"
        fi
    fi
}

unknown() {
    new=${1}.${2}
    if [[ -f "$new" ]]; then
        echo "Filename already exists."
    else
        touch "$new"
        if [[ -n $EDITOR ]]; then
            $EDITOR "$new"
        else
            /usr/bin/vi "$new"
        fi
    fi
}

no_ext() {
    if [[ -e "$1" ]]; then
        echo "Filename already exists."
    else
        touch "$1"
        if [[ -n $EDITOR ]]; then
            $EDITOR "$1"
        else
            /usr/bin/vi "$1"
        fi
    fi
}

check_ext() {
    if [[ "$2" ]]; then
        case "$2" in
            sh|bash )   script="bash"; generic "$@"     ;;
            ksh )       script="ksh"; generic "$@"      ;;
            awk )       script="awk"; generic "$@"      ;;
            pl )        touchpl "$@"                    ;;
            py )        touchpy "$@"                    ;;
            c )         touchc "$@"                    ;;
            * )         unknown "$@"                    ;;
        esac
    else
        no_ext "$1"
    fi
}

main() {
if [[ "$#" -eq 1 ]]; then
    file=$(echo "$1" | awk -F. '{print $1}')
    ext=$(echo "$1" | awk -F. '{print $2}')
    check_ext "$file" "$ext"
else
    printf "Please specify filename and extension. (Example: 'gen example.txt')\n"
fi
}

main "$@"
